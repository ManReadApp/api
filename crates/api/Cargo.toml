[package]
name = "api"
edition.workspace = true
rust-version.workspace = true
version.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# db
surrealdb = {version = "1.3.1", default-features = false, features = ["kv-speedb", "scripting"] }
surrealdb-extras = { version = "0.2.1" }

# api
actix-web = { version = "4.5", features = ["openssl"] }
actix-cors = { version = "0.7", optional = true }
openssl = { workspace = true, optional = true }
local-ip-address = { version = "0.6", optional = true }
actix-files = "0.6"
actix-multipart = "0.6.1"
actix-web-grants = "4.0"
actix-web-httpauth = "0.8"
jsonwebtoken = "9.2"

chrono =  {workspace = true}
serde = { workspace = true, features = ["derive"] }
log = { workspace = true, features = ["std"] }
api_structure = { workspace = true }
manread_scraper = { workspace = true }
rand = {workspace = true}
tokio = { workspace = true, features = ["full"] }
fern = { workspace = true, features = ["colored"] }
humantime = {workspace = true}
nanoid = {workspace = true}
serde_yaml = {workspace = true}
image = {workspace = true}
futures-util = {workspace = true}
serde_json ={workspace = true}
bcrypt ={workspace = true}
img_hash = { git = "https://github.com/ManReadApp/img_hash" }

#search
async-recursion = {workspace = true}


[features]
default = ["detailed_error_responses", "log-ip", "cors", "cors-permissive"]

https = ["dep:openssl"]
detailed_error_responses = []
log-ip = ["dep:local-ip-address"]
cors = ["dep:actix-cors"]
cors-permissive = ["cors", "dep:actix-cors"]
encryption = []
content-type-from-filename = []
dev = []

[profile.test]
opt-level = 3
